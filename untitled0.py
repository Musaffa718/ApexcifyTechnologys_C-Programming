# -*- coding: utf-8 -*-
"""Untitled0.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1KaBf9b33-sxpVFrrXaBxYvnKm9jN5Gnp
"""

import sqlite3
import hashlib
import sys

# ===============================
# Database Setup
# ===============================
DB_NAME = "school.db"

def get_connection():
    return sqlite3.connect(DB_NAME)

def setup_database():
    with get_connection() as conn:
        cursor = conn.cursor()
        cursor.execute("""
        CREATE TABLE IF NOT EXISTS users (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            username TEXT UNIQUE NOT NULL,
            password TEXT NOT NULL
        )
        """)
        conn.commit()

# ===============================
# Utility Functions
# ===============================
def hash_password(password: str) -> str:
    """Return SHA-256 hashed password."""
    return hashlib.sha256(password.encode()).hexdigest()

# ===============================
# Authentication Module
# ===============================
class AuthSystem:

    @staticmethod
    def register():
        username = input("👤 Enter username: ").strip()
        password = input("🔑 Enter password: ").strip()
        confirm_password = input("🔑 Confirm password: ").strip()

        if password != confirm_password:
            print("❌ Passwords do not match.")
            return

        with get_connection() as conn:
            cursor = conn.cursor()
            try:
                cursor.execute("INSERT INTO users (username, password) VALUES (?, ?)",
                               (username, hash_password(password)))
                conn.commit()
                print("✅ Registration successful!")
            except sqlite3.IntegrityError:
                print("❌ Username already exists. Try another.")

    @staticmethod
    def login():
        username = input("👤 Enter username: ").strip()
        password = input("🔑 Enter password: ").strip()

        with get_connection() as conn:
            cursor = conn.cursor()
            cursor.execute("SELECT password FROM users WHERE username = ?", (username,))
            result = cursor.fetchone()

            if result and result[0] == hash_password(password):
                print(f"✅ Welcome {username}, login successful!")
            elif result:
                print("❌ Incorrect password.")
            else:
                print("❌ User not found. Please register first.")

# ===============================
# Main Application
# ===============================
def main_menu():
    while True:
        print("\n" + "="*40)
        print(" 🎓 School / Academy Management System ")
        print("="*40)
        print("1️⃣  Register")
        print("2️⃣  Login")
        print("3️⃣  Exit")
        print("="*40)

        choice = input("👉 Enter your choice: ").strip()

        if choice == "1":
            AuthSystem.register()
        elif choice == "2":
            AuthSystem.login()
        elif choice == "3":
            print("👋 Exiting system. Goodbye!")
            return
        else:
            print("❌ Invalid choice. Please try again.")

# ===============================
# Run Program
# ===============================
if __name__ == "__main__":
    setup_database()
    main_menu()